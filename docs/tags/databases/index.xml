<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Databases on Shallow Brook Software</title><link>https://shallowbrooksoftware.com/tags/databases/</link><description>Recent content in Databases on Shallow Brook Software</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 05 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://shallowbrooksoftware.com/tags/databases/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Newer PostgreSQL Client Tools in GitHub Actions</title><link>https://shallowbrooksoftware.com/posts/using-newer-postgres-client-tools-in-github-actions/</link><pubDate>Sun, 05 May 2024 00:00:00 +0000</pubDate><guid>https://shallowbrooksoftware.com/posts/using-newer-postgres-client-tools-in-github-actions/</guid><description>Recently, while updating my pg2s3 utility, I noticed that the project&amp;rsquo;s docker-compose.yml file was pinning PostgreSQL to version 14. I couldn&amp;rsquo;t remember why I did that, so I went ahead and removed it (what could go wrong?). Unfortunately, this led to some automated tests failing in GitHub Actions!
The Problem Link to heading Thankfully, the error was very clear:
pg_dump: error: server version: 16.2 (Debian 16.2-1.pgdg120+2); pg_dump version: 14.11 (Ubuntu 14.</description></item><item><title>Testing with Transactions</title><link>https://shallowbrooksoftware.com/posts/testing-with-transactions/</link><pubDate>Sun, 24 Mar 2024 00:00:00 +0000</pubDate><guid>https://shallowbrooksoftware.com/posts/testing-with-transactions/</guid><description>Most web applications eventually end up with tests that need to interact with a database. Perhaps your business logic is tightly coupled to the database or maybe you are wanting to test a clearly-defined storage layer. Either way, a common problem arises: how do you clean up the data used during testing? What should you do with all those scattered rows?
Most of the time, developers will resort to a few common strategies:</description></item></channel></rss>