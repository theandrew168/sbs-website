<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Shallow Brook Software</title><link>https://shallowbrooksoftware.com/tags/python/</link><description>Recent content in Python on Shallow Brook Software</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 14 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://shallowbrooksoftware.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Learning From geohot's minikeyvalue Project</title><link>https://shallowbrooksoftware.com/posts/learning-from-geohots-minikeyvalue-project/</link><pubDate>Thu, 14 Jan 2021 00:00:00 +0000</pubDate><guid>https://shallowbrooksoftware.com/posts/learning-from-geohots-minikeyvalue-project/</guid><description>I first became aware of minikeyvalue while watching a recording of George&amp;rsquo;s programming livestream. This project was written in Python and the design was simple: an HTTP-based interface for storing, getting, and deleting arbitrary content. Many folks call this type of thing a &amp;ldquo;distributed key-value store&amp;rdquo;. The project was originally inspired by SeaweedFS but had the goal of being much, much simpler (ideally less than 1000 lines of code).
The architecture of the program is straightforward: a single &amp;ldquo;index server&amp;rdquo; distributes and organizes data between any number of &amp;ldquo;volume servers&amp;rdquo;.</description></item><item><title>Designing Python Web Servers</title><link>https://shallowbrooksoftware.com/posts/designing-python-web-servers/</link><pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate><guid>https://shallowbrooksoftware.com/posts/designing-python-web-servers/</guid><description>I&amp;rsquo;ve spent the last few days designing and benchmarking extremely minimal pure-Python web servers. There is a tech myth / superstition that exposing python web servers to the internet is a bad idea but I&amp;rsquo;ve seen little to no evidence as to why this is supposedly the case. Are they too slow? Are they too insecure for some reason? One thing is for sure: performance must always be measured, not guessed.</description></item></channel></rss>